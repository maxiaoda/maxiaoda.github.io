<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>马小达的博客</title>
    <link>https://maxiaoda.github.io/</link>
    <description>Recent content on 马小达的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Mar 2020 01:05:43 +0800</lastBuildDate>
    
	<atom:link href="https://maxiaoda.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>浅析URL</title>
      <link>https://maxiaoda.github.io/posts/%E5%85%B3%E4%BA%8Eurl%E7%9A%84%E5%8D%9A%E5%AE%A2-%E6%B5%85%E6%9E%90url/</link>
      <pubDate>Tue, 24 Mar 2020 01:05:43 +0800</pubDate>
      
      <guid>https://maxiaoda.github.io/posts/%E5%85%B3%E4%BA%8Eurl%E7%9A%84%E5%8D%9A%E5%AE%A2-%E6%B5%85%E6%9E%90url/</guid>
      <description>什么是URL URL指的是统一资源定位符（Uniform Resource Locator）。URL无非就是一个给定的独特资源在Web上的地址。
URL包含哪几部分？作用分别是什么？ URL由三部分组成：协议类型，服务器地址和路径及文件名。
标准格式如下：
[协议类型]://[服务器地址]:[端口号]/[资源层级UNIX文件路径][文件名]?[查询]#[片段ID] 完整格式如下：
[协议类型]://[访问资源需要的凭证信息]@[服务器地址]:[端口号]/[资源层级UNIX文件路径][文件名]?[查询]#[片段ID] 其中 `[访问凭证信息]、[端口号]、[查询]、[片段ID]`都属于选填项。   协议（protocol）：指的是使用什么样的传输协议，一般有http、ftp、file等协议。 服务器。（通常为域名，有时为IP地址） 端口号。（以数字方式表示，若为默认值可省略） 路径。（以“/”字符区别路径中的每一个目录名称） 查询。（GET模式的窗体参数，以“?”字符为起点，每个参数以“&amp;amp;”隔开，再以“=”分开参数名称与数据，通常以UTF8的URL编码，避开字符冲突的问题） 片段。以“#”字符为起点  DNS 的作用是什么，nslookup 命令怎么用 DNS(域名系统,Domain Name System）是互联网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。它的作用很简单，就是根据域名查出IP地址。
nslookup是一种网络管理命令行工具，可在许多计算机操作系统中使用，用于查询域名系统（DNS）以获得域名或IP地址映射或其他DNS记录。
nslookup语法：nslookup [ -Option ... ] [ Host ] [ -NameServer ]
IP 的作用是什么，ping 命令怎么用 IP简单的理解就是门牌号。
ping的用法：
ping [-t] [-a] [-n count] [-l size] [-f] [-i TTL] [-v TOS] [-r count] [-s count] [[-j host-list] | [-k host-list]] [-w timeout] [-R] [-S srcaddr] [-4] [-6] target_name -t ： Ping 指定的计算机直到中断。 -a ： 将地址解析为计算机名。 -n count ： 发送 count 指定的 ECHO 数据包数。默认值为 4。 -l size ： 发送包含由 size 指定的数据量的 ECHO 数据包。默认为 32 字节；最大值是65,527。 -f ： 在数据包中发送&amp;quot;不要分段&amp;quot;标志。数据包就不会被路由上的网关分段。 -i ttl : 将&amp;quot;生存时间&amp;quot;字段设置为 ttl 指定的值。 -v tos : 将&amp;quot;服务类型&amp;quot;字段设置为 tos 指定的值。 -r count : 在&amp;quot;记录路由&amp;quot;字段中记录传出和返回数据包的路由。count 可以指定最少 1 台，最多 9 台计算机。 -s count : 指定 count 指定的跃点数的时间戳。 -j host-list : 利用 host-list 指定的计算机列表路由数据包。连续计算机可以被中间网关分隔（路由稀疏源）IP 允许的最大数量为 9。 -k host-list : 利用 host-list 指定的计算机列表路由数据包。连续计算机不能被中间网关分隔（路由严格源）IP 允许的最大数量为 9。 -w timeout : 指定超时间隔，单位为毫秒。 destination-list : 指定要 ping 的远程计算机。 </description>
    </item>
    
    <item>
      <title>HTML常用标签</title>
      <link>https://maxiaoda.github.io/posts/%E5%85%B3%E4%BA%8Ehtml%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE%E7%9A%84%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Mon, 23 Mar 2020 22:11:41 +0800</pubDate>
      
      <guid>https://maxiaoda.github.io/posts/%E5%85%B3%E4%BA%8Ehtml%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE%E7%9A%84%E5%8D%9A%E5%AE%A2/</guid>
      <description>什么是HTML HTML的全拼为 HyperText Markup Language 是一种用于创建网页的标准标记语言，也是构成Web世界的一砖一瓦。
“超文本”（hypertext）是指连接单个网站内或多个网站间的网页的链接。链接是网络的一个基本方面。只要将内容上传到互联网，并将其与他人创建的页面相链接，你就成为了万维网的积极参与者。
HTML 使用“标记”（markup）来注明文本、图片和其他内容，以便于在 Web 浏览器中显示。
a 标签的用法 很常用的标签
&amp;lt;a href=&amp;quot;https://example.com&amp;quot;&amp;gt;Website&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;mailto:m.bluth@example.com&amp;quot;&amp;gt;Email&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;tel:+123456789&amp;quot;&amp;gt;Phone&amp;lt;/a&amp;gt; 作用：
 跳转外部页面 跳转邮箱 跳转电话  属性：
 href：包含超链接指向的URL或URL片段。  img 标签的用法  作用：发出get请求，展示一张图片 属性：alt/height/width/src 事件：onload/onerror 响应式：max-width:100%  table 标签的用法  相关的标签  &amp;lt;caption&amp;gt;, &amp;lt;col&amp;gt;, &amp;lt;colgroup&amp;gt;, &amp;lt;tbody&amp;gt;, &amp;lt;td&amp;gt;, &amp;lt;tfoot&amp;gt;, &amp;lt;th&amp;gt;, &amp;lt;thead&amp;gt;, &amp;lt;tr&amp;gt;;   相关的样式(控制单元格边框，规则和框架方面)  border, border-style, border-color, border-width，border-collapse, border-spacing    </description>
    </item>
    
    <item>
      <title>Java学习笔记收藏博客（持续更新）</title>
      <link>https://maxiaoda.github.io/posts/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%94%B6%E8%97%8F/</link>
      <pubDate>Mon, 16 Mar 2020 19:19:28 +0800</pubDate>
      
      <guid>https://maxiaoda.github.io/posts/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%94%B6%E8%97%8F/</guid>
      <description>Java学习笔记  java8的Stream对集合操作飞起来——作者：坚持就是胜利。  </description>
    </item>
    
    <item>
      <title>对Java多线程的初次认识</title>
      <link>https://maxiaoda.github.io/posts/%E5%88%9D%E5%AD%A6%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Wed, 04 Mar 2020 20:23:59 +0800</pubDate>
      
      <guid>https://maxiaoda.github.io/posts/%E5%88%9D%E5%AD%A6%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2/</guid>
      <description>对java多线程的初次认识  本文章是作者初次学习，如有不对的地方，请告知：问题链接
 基础知识 在一个进程中执行的单个任务叫做线程，执行多个任务叫多线程。
术语 - 进程：一个进程包括由操作系统分配的内存空间，包含一个或多个线程。一个线程不能独立的存在，它必须是进程的一部分。一个进程一直运行，直到所有的非守护线程都结束运行后才能结束。
使用多线程  创建多线程： 使用 new 关键字和 Thread 类或其子类建立一个线程对象后，该线程对象就处于新建状态。 运行多线程： 使用start()来运行多线程 阻塞状态： 如果一个线程执行了sleep（）方法，失去所占用资源之后，该线程就从运行状态进入阻塞状态。在睡眠时间已到或获得设备资源后可以重新进入就绪状态。 终止多线程： 一个运行的线程完成任务或者其他终止条件发生时，该线程就切换到终止状态。  为什么需要多线程 多线程能满足编写高效率的程序来达到充分利用 CPU 的目的。
什么时候使用多线程 多线程在CPU密集型的作业下的确不能提高性能甚至更浪费时间，但是在IO密集型的作业下则可以提升性能（或者更准确点说叫平均响应时间）。
总结：使用多线程是特别昂贵的，如果没有耗时的任务，使用多线程，效率反而更低，因为cpu 在线程间的切换也需要耗费时间。</description>
    </item>
    
    <item>
      <title>Collection体系的常用类及其背后的数据结构</title>
      <link>https://maxiaoda.github.io/posts/%E5%85%B3%E4%BA%8Ecollection%E7%9A%84%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 27 Feb 2020 12:35:39 +0800</pubDate>
      
      <guid>https://maxiaoda.github.io/posts/%E5%85%B3%E4%BA%8Ecollection%E7%9A%84%E5%8D%9A%E5%AE%A2/</guid>
      <description>Collection体系的常用类及其背后的数据结构 一、Collection的常用类   List
可以保存重复元素，拥有下标，存储有序，可以存储多个null元素。常用的类有：
   ArrayList LinkedList   Set
不能保存重复元素，没有下标，可以存储null但只能有一个，并且不保证存取顺序。常用的类有：
   HashSet（无序） LinkedHashSet（有序） TreeSet（排序）  Collection体系如下图： 二、Collection背后的数据结构  ArrayList与LinedList   Arraylist：底层使用的是 Object 数组。 LinkedList：底层使用的是 双向链表 数据结构。   HashSet、LinkedHashSet与TreeSet   HashSet: 底层采用 HashMap 来保存元素，HashMap 使用的是拉链法，也叫作【链地址法】。 LinkedHashSet：底层是链表+哈希表，链表保证数据存储有序，链表用来记录存储顺序；哈希表保证数据唯一，存储真正的数据 TreeSet：红黑树(自平衡二叉查找树)。  </description>
    </item>
    
    <item>
      <title>我认为的Maven与Java的包管理</title>
      <link>https://maxiaoda.github.io/posts/%E6%88%91%E8%AE%A4%E4%B8%BA%E7%9A%84maven%E4%B8%8Ejava%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 24 Feb 2020 17:35:22 +0800</pubDate>
      
      <guid>https://maxiaoda.github.io/posts/%E6%88%91%E8%AE%A4%E4%B8%BA%E7%9A%84maven%E4%B8%8Ejava%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86/</guid>
      <description>我认为的Maven与Java的包管理 对Java和Maven的简单理解 学习了Java的包管理与Maven的包管理后，我认为最直观的对它们的理解是，Java相当于一个社会，而Maven相当于这个社会中的其中一个管理者。假设要找一个包，Java会挨个搜索，在信息不全面的情况下找到叫同样名字的包就认为这个就是了。而Maven作为管理者，会定位到家庭住址，将这个包找出来。
Java的包管理 Java的管理机制很简单，将class path告诉jvm就好，而jvm更简单，给什么就编译什么。找不到方法，就在给jvm的class path中找错误。最重要的一个问题是累，不管是用到什么依赖，从开始的下载到之后的用，无论干什么都是手动控制，是非常非常的耗时耗力。
Maven的包管理 划时代的包管理工具，一个有效解决依赖的工具，Maven解决了Java的包依赖和class path问题。将所有的包集中在一个仓库中。
只需要仓库中找到&amp;lt;groupId&amp;gt;``&amp;lt;artifactId&amp;gt;``&amp;lt;version&amp;gt;的代码块
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;XXXX&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;XXXX&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;XXX.XXX.XXX&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; 告诉了Maven地址、街道、门牌号，剩下的Maven自己开始寻找这个包了。对比java，感受到了Maven的轻松。
那么依赖冲突怎么解决的呢，依赖路径最短优先原则：A-&amp;gt;B-&amp;gt;C和A-&amp;gt;C那么后者路径最短，优先选择路径最短的，即选择A-&amp;gt;C。
pom.xml文件是Maven管理这记录的名单，查的时候就看这个文件。pom.xml采用顺序优先原则，谁先被提到就用哪个依赖。  总结 最后，为什么Maven管理的比Java好呢？ 因为在Maven中有很强的约束，将这个包仓库管理的井井有条。</description>
    </item>
    
    <item>
      <title>如何用hugo搭建个人博客</title>
      <link>https://maxiaoda.github.io/posts/%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sat, 22 Feb 2020 11:01:50 +0800</pubDate>
      
      <guid>https://maxiaoda.github.io/posts/%E5%8D%9A%E5%AE%A2/</guid>
      <description>如何用hugo搭建个人博客 本人搭建环境：
 windows10 操作系统； 安装Git，version-2.25.0； 安装hugo，version-v0.65.2；   搭建步骤如下：
  安装Hugo和添加环境变量：
在Hugo的官方Github中，找到 Releases 下载对应的操作系统版本。将安装目录添加至windows系统环境变量中。   使用命令新建一个网站（使用命令时会在当前目录生效）。
   hugo new site SiteName 进入SiteName目录cd SiteName输入以下命令，添加一个主题。  git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke 将主题添加至config.toml中。  echo &#39;theme = &amp;quot;ananke&amp;quot;&#39; &amp;gt;&amp;gt; config.toml 添加一篇名为my-first-post的博客。  hugo new posts/my-first-post.md 在my-first-post文件头部中的draft改为false即可发布博客。  title: &amp;quot;My First Post&amp;quot; date: 2019-03-26T08:47:11+01:00 draft: true 启动Hugo server  hugo server -D  成功后访问http://localhost:1313/
 配置config.toml，baseURL设为新域名，languageCode的中文为zh-Hans，title为自己的博客名称。  baseURL = &amp;quot;https://example.</description>
    </item>
    
  </channel>
</rss>